{"ast":null,"code":"var _jsxFileName = \"/home/matthew/Developer/ga/unit_3/projects/movie-app/src/pages/UserReviewsPage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useController } from '../Controller';\nimport Review from '../components/Review';\nimport { moviePageClasses } from '../appClasses';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function UserReviewPage(_ref) {\n  _s();\n  let {\n    user\n  } = _ref;\n  const {\n    getAllReviews,\n    reviews\n  } = useController();\n  useEffect(() => {\n    getAllReviews();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: moviePageClasses.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: moviePageClasses.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: moviePageClasses.reviewTitle,\n        children: \"Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: moviePageClasses.reviewsContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: moviePageClasses.reviewListContainer,\n          children: reviews && reviews.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: reviews.map((review, i) => {\n              if (review.user === user._id) return /*#__PURE__*/_jsxDEV(Review, {\n                review: review\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 28\n              }, this);\n            })\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(UserReviewPage, \"XZXqep6p1Df8kEyjVPcGarlHOEw=\", false, function () {\n  return [useController];\n});\n_c = UserReviewPage;\nvar _c;\n$RefreshReg$(_c, \"UserReviewPage\");","map":{"version":3,"names":["useEffect","useController","Review","moviePageClasses","jsxDEV","_jsxDEV","Fragment","_Fragment","UserReviewPage","_ref","_s","user","getAllReviews","reviews","className","container","children","reviewTitle","fileName","_jsxFileName","lineNumber","columnNumber","reviewsContainer","reviewListContainer","length","map","review","i","_id","_c","$RefreshReg$"],"sources":["/home/matthew/Developer/ga/unit_3/projects/movie-app/src/pages/UserReviewsPage.jsx"],"sourcesContent":["import { useEffect } from 'react'\nimport { useController } from '../Controller'\nimport Review from '../components/Review'\n\nimport { moviePageClasses } from '../appClasses'\n\nexport function UserReviewPage({ user }) {\n  const { getAllReviews, reviews } = useController()\n\n  useEffect(() => {\n    getAllReviews()\n  }, [])\n\n  return (\n    <div className={moviePageClasses.container}>\n      <div className={moviePageClasses.container}>\n        <h2 className={moviePageClasses.reviewTitle}>Reviews</h2>\n        <div className={moviePageClasses.reviewsContainer}>\n          <div className={moviePageClasses.reviewListContainer}>\n            {reviews && reviews.length > 0 && (\n              <>\n                {reviews.map((review, i) => {\n                  if (review.user === user._id)\n                    return <Review key={i} review={review} />\n                })}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,aAAa,QAAQ,eAAe;AAC7C,OAAOC,MAAM,MAAM,sBAAsB;AAEzC,SAASC,gBAAgB,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,OAAO,SAASC,cAAcA,CAAAC,IAAA,EAAW;EAAAC,EAAA;EAAA,IAAV;IAAEC;EAAK,CAAC,GAAAF,IAAA;EACrC,MAAM;IAAEG,aAAa;IAAEC;EAAQ,CAAC,GAAGZ,aAAa,EAAE;EAElDD,SAAS,CAAC,MAAM;IACdY,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKS,SAAS,EAAEX,gBAAgB,CAACY,SAAU;IAAAC,QAAA,eACzCX,OAAA;MAAKS,SAAS,EAAEX,gBAAgB,CAACY,SAAU;MAAAC,QAAA,gBACzCX,OAAA;QAAIS,SAAS,EAAEX,gBAAgB,CAACc,WAAY;QAAAD,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACzDhB,OAAA;QAAKS,SAAS,EAAEX,gBAAgB,CAACmB,gBAAiB;QAAAN,QAAA,eAChDX,OAAA;UAAKS,SAAS,EAAEX,gBAAgB,CAACoB,mBAAoB;UAAAP,QAAA,EAClDH,OAAO,IAAIA,OAAO,CAACW,MAAM,GAAG,CAAC,iBAC5BnB,OAAA,CAAAE,SAAA;YAAAS,QAAA,EACGH,OAAO,CAACY,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,KAAK;cAC1B,IAAID,MAAM,CAACf,IAAI,KAAKA,IAAI,CAACiB,GAAG,EAC1B,oBAAOvB,OAAA,CAACH,MAAM;gBAASwB,MAAM,EAAEA;cAAO,GAAlBC,CAAC;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAoB;YAC7C,CAAC;UAAC;QAEL;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACX,EAAA,CA1BeF,cAAc;EAAA,QACOP,aAAa;AAAA;AAAA4B,EAAA,GADlCrB,cAAc;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}