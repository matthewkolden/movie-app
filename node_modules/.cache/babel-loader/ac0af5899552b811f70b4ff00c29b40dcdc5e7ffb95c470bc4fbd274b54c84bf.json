{"ast":null,"code":"var _jsxFileName = \"/home/matthew/Developer/ga/unit_3/projects/movie-app/src/components/Review.jsx\";\nimport reviewService from '../services/reviewService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Review(_ref) {\n  let {\n    review\n  } = _ref;\n  async function deleteReview(id) {\n    try {\n      await bookmarkService.deleteBookmark(id);\n      const indexToRemove = bookmarks.findIndex(bookmark => bookmark._id === id);\n      if (indexToRemove) {\n        const bookmarkCopy = [...bookmarks];\n        bookmarkCopy.splice(indexToRemove, 1);\n        setBookmarks([...bookmarkCopy]);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [review.author, \" - \", review.body]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["reviewService","jsxDEV","_jsxDEV","Fragment","_Fragment","Review","_ref","review","deleteReview","id","bookmarkService","deleteBookmark","indexToRemove","bookmarks","findIndex","bookmark","_id","bookmarkCopy","splice","setBookmarks","error","console","children","author","body","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/matthew/Developer/ga/unit_3/projects/movie-app/src/components/Review.jsx"],"sourcesContent":["import reviewService from '../services/reviewService'\n\nexport default function Review({ review }) {\n  async function deleteReview(id) {\n    try {\n      await bookmarkService.deleteBookmark(id)\n      const indexToRemove = bookmarks.findIndex(\n        (bookmark) => bookmark._id === id\n      )\n      if (indexToRemove) {\n        const bookmarkCopy = [...bookmarks]\n        bookmarkCopy.splice(indexToRemove, 1)\n        setBookmarks([...bookmarkCopy])\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  return (\n    <>\n      <li>\n        <p>\n          {review.author} - {review.body}\n        </p>\n      </li>\n    </>\n  )\n}\n"],"mappings":";AAAA,OAAOA,aAAa,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErD,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAa;EAAA,IAAZ;IAAEC;EAAO,CAAC,GAAAD,IAAA;EACvC,eAAeE,YAAYA,CAACC,EAAE,EAAE;IAC9B,IAAI;MACF,MAAMC,eAAe,CAACC,cAAc,CAACF,EAAE,CAAC;MACxC,MAAMG,aAAa,GAAGC,SAAS,CAACC,SAAS,CACtCC,QAAQ,IAAKA,QAAQ,CAACC,GAAG,KAAKP,EAAE,CAClC;MACD,IAAIG,aAAa,EAAE;QACjB,MAAMK,YAAY,GAAG,CAAC,GAAGJ,SAAS,CAAC;QACnCI,YAAY,CAACC,MAAM,CAACN,aAAa,EAAE,CAAC,CAAC;QACrCO,YAAY,CAAC,CAAC,GAAGF,YAAY,CAAC,CAAC;MACjC;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF;EACA,oBACElB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACEpB,OAAA;MAAAoB,QAAA,eACEpB,OAAA;QAAAoB,QAAA,GACGf,MAAM,CAACgB,MAAM,EAAC,KAAG,EAAChB,MAAM,CAACiB,IAAI;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAC5B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD,iBACJ;AAEP;AAACC,EAAA,GAzBuBxB,MAAM;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}